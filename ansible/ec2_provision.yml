---
- name: Spin up EC2 servers with SSH access
  hosts: localhost
  connection: local
  gather_facts: no

  vars:
    region: ap-south-1
    instance_type: t2.micro
    image_id: ami-0b09627181c8d5778
    key_name: devops-practice

    app_instances:
      - web1
      - web2
    load_balancer: load-balancer

  tasks:

    - name: Create security group for Ansible SSH and HTTP
      amazon.aws.ec2_group:
        name: ansible-sg
        description: Allow SSH and HTTP
        region: "{{ region }}"
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
        rules_egress:
          - proto: -1
            from_port: 0
            to_port: 0
            cidr_ip: 0.0.0.0/0
      register: ssh_sg

    - name: Launch app instances (web1 & web2)
      amazon.aws.ec2_instance:
        name: "{{ item }}"
        key_name: "{{ key_name }}"
        region: "{{ region }}"
        instance_type: "{{ instance_type }}"
        image_id: "{{ image_id }}"
        wait: yes
        count: 1
        network:
          assign_public_ip: yes
          security_group_id: "{{ ssh_sg.group_id }}"
        tags:
          Name: "{{ item }}"
      loop: "{{ app_instances }}"
      register: app_instances_result

    - name: Launch load balancer instance
      amazon.aws.ec2_instance:
        name: "{{ load_balancer }}"
        key_name: "{{ key_name }}"
        region: "{{ region }}"
        instance_type: "{{ instance_type }}"
        image_id: "{{ image_id }}"
        wait: yes
        count: 1
        network:
          assign_public_ip: yes
          security_group_id: "{{ ssh_sg.group_id }}"
        tags:
          Name: "{{ load_balancer }}"
      register: lb_result

    - name: Extract public IPs of app instances
      set_fact:
        app_ips: "{{ app_instances_result.results | map(attribute='instances') | map('first') | map(attribute='public_ip_address') | list }}"

    - name: Extract public IP of load balancer
      set_fact:
        lb_ip: "{{ lb_result.instances[0].public_ip_address }}"

    - name: Generate dynamic inventory.ini
      template:
        src: inventory.ini.j2
        dest: inventory.ini
